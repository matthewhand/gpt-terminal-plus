#version: '3.8'

services:
  # Service for the Flux-based image generation pipeline
  flux-service:
    build: ./docker/flux-service  # Builds from the specified Dockerfile
    container_name: flux_service_container
    runtime: nvidia  # Use NVIDIA runtime for GPU support
    environment:
      - API_TOKEN=${API_TOKEN}  # Secure API token for authentication
      - NODE_ENV=${NODE_ENV}  # Environment setting, e.g., production
      - DEBUG=${DEBUG}  # Debugging level, e.g., app:*
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES}  # Controls which GPUs are visible to the container
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES}  # Specifies GPU driver capabilities
    volumes:
      - ./output:/app/output  # Share output folder between host and container
    ports:
      - "${FLUX_SERVICE_PORT:-5017}:5005"  # Map host port to container port 5005, default to 5017
    depends_on:
      - gpt-terminal  # Ensure gpt-terminal service is started first

  # Service for the GPT-based terminal application
  gpt-terminal:
    image: mhand79/gpt-terminal-plus:latest
    container_name: gpt_terminal_container
    environment:
      - API_TOKEN=${API_TOKEN}  # Secure API token for authentication
      - NODE_ENV=${NODE_ENV}  # Environment setting, e.g., production
      - DEBUG=${DEBUG}  # Debugging level, e.g., app:*
    ports:
      - "${GPT_TERMINAL_PORT:-5000}:5000"  # Map host port to container port 5000, default to 5000
    volumes:
      - ./data:/app/data  # Share data folder between host and container

  # NGINX service to serve files generated by the flux-service
  nginx:
    image: nginx:latest
    container_name: nginx_flux_output
    ports:
      - "${NGINX_PORT:-8080}:80"  # Serve content on host port 8080, default to 8080
    volumes:
      - ./output:/usr/share/nginx/html:ro  # Serve files from output directory
    depends_on:
      - flux-service  # Ensure flux-service is started first
