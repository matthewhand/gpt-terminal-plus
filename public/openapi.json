{
  "openapi": "3.0.3",
  "info": {
    "title": "gpt-terminal-plus API",
    "version": "0.1.0",
    "description": "Minimal OpenAPI surface for listing servers and executing shell/python/LLM"
  },
  "servers": [
    { "url": "http://localhost:3100", "description": "Local dev" }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": { "type": "http", "scheme": "bearer", "bearerFormat": "API_TOKEN" }
    },
    "schemas": {
      "ExecutionResult": {
        "type": "object",
        "properties": {
          "stdout": { "type": "string" },
          "stderr": { "type": "string" },
          "exitCode": { "type": "integer" },
          "error": { "type": "boolean" }
        },
        "required": ["stdout","stderr","exitCode","error"]
      }
    }
  },
  "security": [{ "bearerAuth": [] }],
  "paths": {
    "/server/list": {
      "get": {
        "summary": "List servers for this API token",
        "responses": {
          "200": {
            "description": "List of servers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "servers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": { "type": "string" },
                          "label": { "type": "string" },
                          "protocol": { "type": "string" },
                          "hostname": { "type": "string", "nullable": true }
                        },
                        "required": ["key","label","protocol"]
                      }
                    }
                  },
                  "required": ["servers"]
                }
              }
            }
          }
        }
      }
    },
    "/command/execute": {
      "post": {
        "summary": "Execute a shell command",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "command": { "type": "string" },
                  "timeoutMs": { "type": "integer" },
                  "directory": { "type": "string" }
                },
                "required": ["command"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Execution complete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": { "$ref": "#/components/schemas/ExecutionResult" },
                    "aiAnalysis": { "type": "object" }
                  },
                  "required": ["result"]
                }
              }
            }
          }
        }
      }
    },
    "/command/execute-code": {
      "post": {
        "summary": "Execute code (e.g., python, bash)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "language": { "type": "string", "enum": ["bash","python","python3"] },
                  "code": { "type": "string" },
                  "timeoutMs": { "type": "integer" },
                  "directory": { "type": "string" }
                },
                "required": ["language","code"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Execution complete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": { "$ref": "#/components/schemas/ExecutionResult" },
                    "aiAnalysis": { "type": "object" }
                  },
                  "required": ["result"]
                }
              }
            }
          }
        }
      }
    },
    "/command/execute-file": {
      "post": {
        "summary": "Execute a file present on the server/target",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filename": { "type": "string" },
                  "directory": { "type": "string" },
                  "timeoutMs": { "type": "integer" }
                },
                "required": ["filename"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Execution complete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": { "$ref": "#/components/schemas/ExecutionResult" },
                    "aiAnalysis": { "type": "object" }
                  },
                  "required": ["result"]
                }
              }
            }
          }
        }
      }
    },
    "/command/execute-llm": {
      "post": {
        "summary": "Run an LLM plan or direct instruction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instructions": { "type": "string" },
                  "dryRun": { "type": "boolean" },
                  "stream": { "type": "boolean" }
                },
                "required": ["instructions"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Plan execution (or dry run) response",
            "content": {
              "application/json": {
                "schema": { "type": "object" }
              }
            }
          }
        }
      }
    }
  }
}
