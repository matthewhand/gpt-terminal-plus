{
  "openapi": "3.0.3",
  "info": {
    "title": "gpt-terminal-plus API",
    "version": "0.1.0",
    "description": "OpenAPI generated from JSDoc annotations."
  },
  "servers": [
    {
      "url": "http://localhost:3100",
      "description": "Public base URL"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "API_TOKEN"
      }
    },
    "schemas": {
      "ExecutionResult": {
        "type": "object",
        "properties": {
          "stdout": {
            "type": "string"
          },
          "stderr": {
            "type": "string"
          },
          "exitCode": {
            "type": "integer"
          },
          "error": {
            "type": "boolean"
          }
        },
        "required": [
          "stdout",
          "stderr",
          "exitCode",
          "error"
        ]
      }
    }
  },
  "paths": {
    "/server/list": {
      "get": {
        "operationId": "serverList",
        "summary": "List servers for this API token",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "servers": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "required": [
                    "servers"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/command/execute": {
      "post": {
        "operationId": "executeCommand",
        "summary": "Execute using first available mode",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string"
                  }
                },
                "required": [
                  "command"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Execution complete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/ExecutionResult"
                    },
                    "aiAnalysis": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/command/execute-code": {
      "post": {
        "operationId": "executeCode",
        "summary": "Execute a code snippet",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  },
                  "timeoutMs": {
                    "type": "integer"
                  }
                },
                "required": [
                  "language",
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Execution complete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/ExecutionResult"
                    },
                    "aiAnalysis": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/command/execute-file": {
      "post": {
        "operationId": "executeFile",
        "summary": "Execute a file present on the server/target (deprecated)",
        "deprecated": true,
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filename": {
                    "type": "string"
                  },
                  "directory": {
                    "type": "string"
                  },
                  "timeoutMs": {
                    "type": "integer"
                  }
                },
                "required": [
                  "filename"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Execution complete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/ExecutionResult"
                    },
                    "aiAnalysis": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "result"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/command/execute-llm": {
      "post": {
        "operationId": "executeLlm",
        "summary": "Run an LLM plan or direct instruction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instructions": {
                    "type": "string"
                  },
                  "dryRun": {
                    "type": "boolean"
                  },
                  "stream": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "instructions"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "LLM execution complete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "plan": {
                      "type": "object"
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/file/create": {
      "post": {
        "operationId": "fileCreate",
        "summary": "Create or replace a file on the active server",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filePath": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "backup": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "required": [
                  "filePath"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File created"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/file/list": {
      "post": {
        "operationId": "fileList",
        "summary": "List files in a directory on the active server",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "directory": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "files": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "total": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        },
                        "offset": {
                          "type": "integer"
                        }
                      }
                    }
                  },
                  "required": [
                    "files"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "fileListGet",
        "summary": "List files (GET shim)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "directory",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/file/update": {
      "post": {
        "operationId": "fileUpdate",
        "summary": "Regex replace within a file",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filePath": {
                    "type": "string"
                  },
                  "pattern": {
                    "type": "string"
                  },
                  "replacement": {
                    "type": "string"
                  },
                  "backup": {
                    "type": "boolean",
                    "default": true
                  },
                  "multiline": {
                    "type": "boolean",
                    "default": false
                  }
                },
                "required": [
                  "filePath",
                  "pattern",
                  "replacement"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/file/amend": {
      "post": {
        "operationId": "fileAmend",
        "summary": "Append content to a file",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filePath": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "backup": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "required": [
                  "filePath",
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Amended"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/file/diff": {
      "post": {
        "operationId": "fileApplyDiff",
        "summary": "Apply a unified diff using git apply",
        "description": "Validates with `git apply --check`, then applies with `git apply`. Currently supported only for the local server handler.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-openai-isConsequential": true,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "diff": {
                    "type": "string"
                  },
                  "dryRun": {
                    "type": "boolean",
                    "default": false
                  },
                  "whitespaceNowarn": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "required": [
                  "diff"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Applied"
          },
          "400": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/file/patch": {
      "post": {
        "operationId": "fileApplyPatch",
        "summary": "Apply a structured patch via git apply",
        "description": "Generates a minimal unified diff for the target file and applies it with git apply. Currently supported only for the local server handler.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "x-openai-isConsequential": true,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filePath": {
                    "type": "string"
                  },
                  "search": {
                    "type": "string"
                  },
                  "oldText": {
                    "type": "string"
                  },
                  "replace": {
                    "type": "string"
                  },
                  "all": {
                    "type": "boolean",
                    "default": false
                  },
                  "startLine": {
                    "type": "integer"
                  },
                  "endLine": {
                    "type": "integer"
                  },
                  "dryRun": {
                    "type": "boolean",
                    "default": false
                  },
                  "whitespaceNowarn": {
                    "type": "boolean",
                    "default": true
                  }
                },
                "required": [
                  "filePath",
                  "replace"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Applied"
          },
          "400": {
            "description": "Validation failed"
          }
        }
      }
    },
    "/settings": {
      "get": {
        "operationId": "getSettings",
        "summary": "Get redacted configuration settings",
        "description": "Returns grouped configuration values with secrets redacted. Values overridden by environment variables are marked as readOnly.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Redacted settings grouped by category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "A settings group (e.g., server, security, llm, compat)",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "value": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "object"
                            },
                            {
                              "type": "array"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "readOnly": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "value",
                        "readOnly"
                      ]
                    }
                  }
                },
                "examples": {
                  "sample": {
                    "summary": "Example response",
                    "value": {
                      "server": {
                        "port": {
                          "value": 5005,
                          "readOnly": false
                        },
                        "httpsEnabled": {
                          "value": false,
                          "readOnly": false
                        }
                      },
                      "security": {
                        "apiToken": {
                          "value": "*****",
                          "readOnly": true
                        }
                      },
                      "llm": {
                        "provider": {
                          "value": "openai",
                          "readOnly": false
                        },
                        "openai.baseUrl": {
                          "value": "",
                          "readOnly": false
                        },
                        "openai.apiKey": {
                          "value": "*****",
                          "readOnly": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/config/schema": {
      "get": {
        "operationId": "getConfigSchema",
        "summary": "Get configuration schema",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration schema"
          }
        }
      }
    },
    "/config/override": {
      "get": {
        "operationId": "getConfigOverride",
        "summary": "Get current configuration",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current configuration"
          }
        }
      },
      "post": {
        "operationId": "setConfigOverride",
        "summary": "Update configuration",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Configuration updated"
          },
          "400": {
            "description": "Invalid configuration"
          }
        }
      }
    },
    "/config/settings": {
      "get": {
        "operationId": "getConfigSettings",
        "summary": "Get redacted configuration settings",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Redacted configuration settings"
          }
        }
      }
    },
    "/files/op": {
      "post": {
        "operationId": "fileOperation",
        "summary": "Execute file operation",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "read",
                      "write",
                      "delete",
                      "list",
                      "mkdir"
                    ]
                  },
                  "path": {
                    "type": "string"
                  },
                  "content": {
                    "type": "string"
                  },
                  "recursive": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "type",
                  "path"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation completed"
          },
          "400": {
            "description": "Invalid operation"
          },
          "403": {
            "description": "Path not allowed"
          }
        }
      }
    },
    "/llm/plan": {
      "post": {
        "operationId": "llmPlan",
        "summary": "Plan command using LLM",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input": {
                    "type": "string"
                  }
                },
                "required": [
                  "input"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command planned"
          },
          "400": {
            "description": "Input required"
          },
          "429": {
            "description": "Budget exceeded"
          }
        }
      }
    },
    "/remote/ssh": {
      "post": {
        "operationId": "createSSH",
        "summary": "Create SSH session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "host": {
                    "type": "string"
                  },
                  "user": {
                    "type": "string"
                  }
                },
                "required": [
                  "host"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SSH session created"
          }
        }
      }
    },
    "/remote/ssm": {
      "post": {
        "operationId": "createSSM",
        "summary": "Create SSM session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instanceId": {
                    "type": "string"
                  }
                },
                "required": [
                  "instanceId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SSM session created"
          }
        }
      }
    },
    "/remote/list": {
      "get": {
        "operationId": "listRemote",
        "summary": "List remote sessions",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Remote sessions"
          }
        }
      }
    },
    "/shell/llm/plan-exec": {
      "post": {
        "operationId": "shellLlmPlanExec",
        "summary": "Plan and optionally execute command via LLM",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "input": {
                    "type": "string"
                  },
                  "autoExecute": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "input"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command planned/executed"
          },
          "400": {
            "description": "Input required"
          },
          "429": {
            "description": "Budget exceeded"
          }
        }
      }
    },
    "/shell/session/start": {
      "post": {
        "operationId": "shellSessionStart",
        "summary": "Start a new persistent shell session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "shell": {
                    "type": "string",
                    "default": "bash"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Session started"
          },
          "500": {
            "description": "Failed to start session"
          }
        }
      }
    },
    "/shell/session/{id}/exec": {
      "post": {
        "operationId": "shellSessionExec",
        "summary": "Execute command inside existing session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "command": {
                    "type": "string"
                  },
                  "shell": {
                    "type": "string"
                  }
                },
                "required": [
                  "command"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Command executed"
          },
          "400": {
            "description": "Command required"
          },
          "404": {
            "description": "Session not found"
          }
        }
      }
    },
    "/shell/session/{id}/cd": {
      "post": {
        "operationId": "shellSessionChangeDirectory",
        "summary": "Change working directory inside existing session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "directory": {
                    "type": "string"
                  }
                },
                "required": [
                  "directory"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Directory changed successfully"
          },
          "404": {
            "description": "Session not found"
          },
          "500": {
            "description": "Failed to change directory"
          }
        }
      }
    },
    "/shell/session/{id}/stop": {
      "post": {
        "operationId": "shellSessionStop",
        "summary": "Stop a persistent shell session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session stopped"
          },
          "404": {
            "description": "Session not found"
          },
          "500": {
            "description": "Failed to stop session"
          }
        }
      }
    },
    "/shell/session/list": {
      "get": {
        "operationId": "shellSessionList",
        "summary": "List active shell sessions",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of sessions"
          }
        }
      }
    },
    "/shell/session/{id}/logs": {
      "get": {
        "operationId": "shellSessionLogs",
        "summary": "Fetch logs from a shell session",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Session logs"
          },
          "404": {
            "description": "Session not found"
          }
        }
      }
    }
  },
  "tags": []
}